{"version":3,"sources":["atoms.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","categoryState","atom","key","default","TO_DO","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","useForm","register","handleSubmit","setValue","onSubmit","oldToDos","text","id","Date","now","localStorage","setItem","JSON","stringify","required","placeholder","ToDo","setLocalStorage","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","newArr","slice","DOING","DONE","ToDoList","useRecoilState","setCategory","useEffect","parse","getItem","value","onInput","map","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","QueryClient","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.8a8ab8c9.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\r\n\r\nexport enum Categories {\r\n  \"TO_DO\" = \"TO_DO\",\r\n  \"DOING\" = \"DOING\",\r\n  \"DONE\" = \"DONE\",\r\n}\r\n\r\nexport interface IToDo {\r\n  text: string;\r\n  id: number;\r\n  category: Categories;\r\n}\r\n\r\nexport const categoryState = atom<Categories> ({\r\n  key: \"category\",\r\n  default: Categories.TO_DO,\r\n});\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n  key: \"toDo\",\r\n  default: [],\r\n});\r\n\r\nexport const toDoSelector = selector({\r\n  key: \"toDoSelector\",\r\n  get: ({ get }) => {\r\n    const toDos = get(toDoState);\r\n    const category = get(categoryState);\r\n\r\n    return toDos?.filter((toDo) => toDo.category === category);\r\n  },\r\n});","import { useForm } from \"react-hook-form\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { IToDo, categoryState, toDoState } from \"../atoms\";\r\n\r\ninterface IForm {\r\n  toDo: string;\r\n}\r\n\r\nfunction CreateToDo() {\r\n  const setLocalStorage = (toDos: IToDo[]) => {\r\n    localStorage.setItem(\"toDos\", JSON.stringify(toDos));\r\n  }\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const category = useRecoilValue(categoryState);\r\n  const { register, handleSubmit, setValue } = useForm<IForm>();\r\n  const handleValid = ({ toDo }: IForm) => {\r\n    setToDos((oldToDos) => {\r\n      setLocalStorage([{ text: toDo, id: Date.now(), category }, ...oldToDos]);\r\n      return [\r\n        { text: toDo, id: Date.now(), category },\r\n        ...oldToDos,\r\n      ]\r\n    });\r\n    setValue(\"toDo\", \"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(handleValid)}>\r\n      <input\r\n        {...register(\"toDo\", {\r\n          required: \"Please write a To Do\",\r\n        })}\r\n        placeholder=\"Write a to do\"\r\n      />\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CreateToDo;","import { IToDo, toDoState, Categories } from \"../atoms\";\r\nimport { useSetRecoilState } from \"recoil\";\r\n\r\nfunction ToDo({ text, category, id }: IToDo) {\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const setLocalStorage = (toDos: IToDo[]) => {\r\n    localStorage.setItem(\"toDos\", JSON.stringify(toDos));\r\n  }\r\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const {\r\n      currentTarget: { name },\r\n    } = event;\r\n    setToDos((oldToDos) => {\r\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\r\n      const newToDo = { text, id, category: name as any };\r\n      const newArr = [\r\n        ...oldToDos.slice(0, targetIndex),\r\n        newToDo,\r\n        ...oldToDos.slice(targetIndex + 1),];\r\n      setLocalStorage(newArr);\r\n      return newArr;\r\n    });\r\n  };\r\n  const deleteFn = () => {\r\n    setToDos((oldToDos) => {\r\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\r\n      const newArr = [\r\n        ...oldToDos.slice(0, targetIndex),\r\n        ...oldToDos.slice(targetIndex + 1),];\r\n      setLocalStorage(newArr);\r\n      return newArr;\r\n    });\r\n  };\r\n  return (\r\n    <li>\r\n      <span>{text}</span>\r\n      {category !== Categories.DOING && (\r\n        <button name={Categories.DOING} onClick={onClick}>\r\n          Doing\r\n        </button>\r\n      )}\r\n      {category !== Categories.TO_DO && (\r\n        <button name={Categories.TO_DO} onClick={onClick}>\r\n          To Do\r\n        </button>\r\n      )}\r\n      {category !== Categories.DONE && (\r\n        <button name={Categories.DONE} onClick={onClick}>\r\n          Done\r\n        </button>\r\n      )}\r\n      <button onClick={deleteFn}>Delete</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ToDo;","import React, { useEffect } from \"react\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { toDoState, toDoSelector, categoryState, Categories } from \"../atoms\";\r\nimport CreateToDo from \"./CreateToDo\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nfunction ToDoList() {\r\n  const toDos = useRecoilValue(toDoSelector);\r\n  const setToDos = useSetRecoilState(toDoState);\r\n  const [category, setCategory] = useRecoilState(categoryState);\r\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\r\n    setCategory(event.currentTarget.value as any);\r\n  }\r\n  useEffect(() => {\r\n    setToDos(JSON.parse(`${localStorage.getItem(\"toDos\")}`));\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h1>To Dos</h1>\r\n      <hr />\r\n      <select value={category} onInput={onInput}>\r\n        <option value={Categories.TO_DO}>To Do</option>\r\n        <option value={Categories.DOING}>Doing</option>\r\n        <option value={Categories.DONE}>Done</option>\r\n      </select>\r\n      <CreateToDo />\r\n      {toDos?.map((toDo) => (\r\n        <ToDo key={toDo.id} {...toDo} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme } from './theme';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"gray\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"whitesmoke\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n  cardBgColor: \"white\",\r\n};"],"sourceRoot":""}